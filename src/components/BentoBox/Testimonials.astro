---
import BentoBoxCard from './BentoBoxCard.astro';

const testimonials = [
    {
        text: "This is a sample testimonial.",
        author: "Michael Dubois",
        title: "Engineer",
        company: "Concept IX"
    },
    {
        text: "I highly recommend working with Kyle, he did an awesome job at executing my vision for my website! He presented a couple different options with different price ranges to ensure it fit my budget. He was quick, communicative, friendly, & helpful. ",
        author: "Jaiya Elliot",
        title: "Owner",
        company: "Pepper & Pals"
    },
    {
        text: "Kyle is a great developer to work with. He is very knowledgeable and has a great eye for design. He is very responsive and always willing to help. I would highly recommend him to anyone looking for a developer.",
        author: "John Doe",
        title: "CEO",
        company: "Company XYZ"
    }
]

---

<BentoBoxCard title="Testimonials" position="sm:col-start-2 sm:col-span-2 sm:row-start-2">
    <div class='relative w-full h-full mx-auto overflow-hidden'>
        <div id="carousel" class="flex h-full transition-transform duration-300" style="touch-action: pan-y;">
            {testimonials.map((testimonial, index) => (
                <div class="w-full flex-shrink-0">
                    <div class="flex flex-col justify-center items-center h-full">
                        <div class="text-center p-3">
                            <p class="text-xs/5 font-regular text-black">
                                {testimonial.text}
                            </p>
                            <p class="text-xs text-gray-500">{testimonial.author} - {testimonial.title}</p>
                        </div>
                    </div>
                </div>
            ))}
        </div>
        <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
            {testimonials.map((_, i) => (
                <button class="dot w-3 h-3 rounded-full bg-gray-300 transition-all" data-index={i}></button>
            ))}
        </div>
    </div>
</BentoBoxCard>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const carousel = document.getElementById("carousel");
  const dots = document.querySelectorAll(".dot");
  let index = 0;
  let startX = 0;
  let currentX = 0;
  let isDragging = false;
  const totalSlides = dots.length;
  let autoScrollInterval: number | null = null;

  function getSlideWidth() {
    if (!carousel) return;
    return carousel.parentElement ? carousel.parentElement.clientWidth : 0;
  }

  function updateCarousel() {
    const slideWidth = getSlideWidth();
    if (!carousel || !slideWidth) return;
    carousel.style.transition = "transform 0.3s ease-in-out";
    carousel.style.transform = `translateX(-${index * slideWidth}px)`;
    dots.forEach((dot, i) => {
      dot.classList.toggle("bg-gray-900", i === index);
      dot.classList.toggle("bg-gray-300", i !== index);
    });
  }

  function nextSlide() {
    index = (index + 1) % totalSlides;
    updateCarousel();
  }
  function prevSlide() {
    index = (index - 1 + totalSlides) % totalSlides;
    updateCarousel();
  }
  function goToSlide(i: number) {
    index = i;
    updateCarousel();
  }

  // Optional: start auto-scroll if desired.
  function startAutoScroll() {
    if (autoScrollInterval) clearInterval(autoScrollInterval);
    autoScrollInterval = setInterval(() => {
      if (!isDragging) nextSlide();
    }, 5000);
  }
  // You can disable auto-scroll for debugging:
  // startAutoScroll();

  if (!carousel) return;

  // Pointer events for swiping
  carousel.addEventListener("pointerdown", (e) => {
    isDragging = true;
    startX = e.clientX;
    carousel.style.transition = "none"; // disable snapping during drag
    carousel.setPointerCapture(e.pointerId);
    // Pause auto-scroll while interacting
    if (autoScrollInterval) clearInterval(autoScrollInterval);
  });

  carousel.addEventListener("pointermove", (e) => {
    if (!isDragging) return;
    currentX = e.clientX;
    const diff = currentX - startX;
    const slideWidth = getSlideWidth();
    if (!slideWidth) return;
    carousel.style.transform = `translateX(${ -index * slideWidth + diff }px)`;
    e.preventDefault();
  });

  carousel.addEventListener("pointerup", (e) => {
    if (!isDragging) return;
    isDragging = false;
    const diff = currentX - startX;
    const threshold = 50;
    if (diff < -threshold) {
      nextSlide();
    } else if (diff > threshold) {
      prevSlide();
    } else {
      updateCarousel();
    }
    startX = 0;
    currentX = 0;
    carousel.releasePointerCapture(e.pointerId);
    // Resume auto-scroll after interaction.
    startAutoScroll();
  });

  carousel.addEventListener("pointercancel", (e) => {
    if (!isDragging) return;
    isDragging = false;
    updateCarousel();
    carousel.releasePointerCapture(e.pointerId);
    startAutoScroll();
  });

  // Dot navigation
  dots.forEach((dot) => {
    dot.addEventListener("click", () => {
      goToSlide(parseInt((dot as HTMLElement).dataset.index || "0"));
    });
  });

  window.addEventListener("resize", updateCarousel);
  updateCarousel();
  // Optionally, start auto-scroll if you want:
  // startAutoScroll();
});
</script>

<!-- <div class="flex flex-col justify-center items-center h-full">
        <div class="text-left">
            <p class="text-xs font-semibold text-black">
                This is a sample testimonial.
            </p>
            <p class="text-xs text-gray-500">Michael Dubois - Engineer</p>
        </div>
    </div> -->