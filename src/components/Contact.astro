<div class="relative isolate mt-14 pb-8">
  <div class="mx-auto max-w-xl lg:max-w-4xl">
    <h2 class="text-lg font-semibold tracking-tight text-pretty text-gray-900 sm:text-2xl">Let’s talk about your project</h2>
    <p class="mt-2 text-base/8 md:w-3/4">Let’s build something great together—whether you need an MVP, frontend support, or a code audit, I’m here to help.</p>
    <div class="mt-6 flex flex-col gap-16 sm:gap-y-20 lg:flex-row">
      <form id="contact-form" method="POST" class="lg:flex-auto">
        <div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
          <div>
            <label for="name" class="block text-sm/6 font-semibold text-gray-900">Name  <span class="hidden pr-3 text-xs text-red-600" id="name-error"></span></label>
            <div class="mt-2">
              <input type="text" name="name" id="name" required autocomplete="given-name" class="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-blue-700">
            </div>
          </div>
          <div>
            <label for="email" class="block text-sm/6 font-semibold text-gray-900">Email <span class="hidden pr-3 text-xs text-red-600" id="email-error"></span></label>
            <div class="mt-2">
              <input type="text" name="email" required id="email" autocomplete="family-name" class="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-blue-700">
              <p class="hidden mt-2 text-sm text-red-600" id="email-error"></p>
            </div>
          </div>
          <div class="sm:col-span-2">
            <label for="message" class="block text-sm/6 font-semibold text-gray-900">Message<span class="hidden pr-3 text-xs text-red-600" id="message-error"></span></label>
            <div class="mt-2">
              <p class="hidden mt-2 text-sm text-red-600" id="message-error"></p>
              <textarea id="message" required name="message" rows="4" class="block w-full rounded-md bg-white px-3.5 py-2 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-blue-700"></textarea>
            </div>
          </div>
        </div>
        <div class="mt-10">
          <button id="contact-button" type="submit" class="block w-full rounded-md bg-black px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-xs hover:bg-blue-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-700 transition-colors duration-200 ease-in disabled:bg-blue-400 disabled:cursor-not-allowed">
            <span id="contact-button-standard">Send a Message</span>
            <span id="contact-button-loading" class="hidden flex items-center justify-center gap-x-2">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5 animate-spin">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.182 15.182a4.5 4.5 0 0 1-6.364 0M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0ZM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75Zm-.375 0h.008v.015h-.008V9.75Zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75Zm-.375 0h.008v.015h-.008V9.75Z" />
              </svg>
              Sending...
            </span>
            <span id="contact-button-success" class="hidden flex items-center justify-center gap-x-2">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 8.25v-1.5m0 1.5c-1.355 0-2.697.056-4.024.166C6.845 8.51 6 9.473 6 10.608v2.513m6-4.871c1.355 0 2.697.056 4.024.166C17.155 8.51 18 9.473 18 10.608v2.513M15 8.25v-1.5m-6 1.5v-1.5m12 9.75-1.5.75a3.354 3.354 0 0 1-3 0 3.354 3.354 0 0 0-3 0 3.354 3.354 0 0 1-3 0 3.354 3.354 0 0 0-3 0 3.354 3.354 0 0 1-3 0L3 16.5m15-3.379a48.474 48.474 0 0 0-6-.371c-2.032 0-4.034.126-6 .371m12 0c.39.049.777.102 1.163.16 1.07.16 1.837 1.094 1.837 2.175v5.169c0 .621-.504 1.125-1.125 1.125H4.125A1.125 1.125 0 0 1 3 20.625v-5.17c0-1.08.768-2.014 1.837-2.174A47.78 47.78 0 0 1 6 13.12M12.265 3.11a.375.375 0 1 1-.53 0L12 2.845l.265.265Zm-3 0a.375.375 0 1 1-.53 0L9 2.845l.265.265Zm6 0a.375.375 0 1 1-.53 0L15 2.845l.265.265Z" />
              </svg>
              Message Sent!
            </span>
            <span id="contact-button-error" class="hidden flex items-center justify-center gap-x-2">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z" />
              </svg>

              Unhandled Error
            </span>
          </button>
        </div>
      </form>
      <div class="lg:mt-6 lg:w-80 lg:flex-none">
        <figure class="mt-4">
          <blockquote class="text-base/7 font-semibold text-gray-900">
            <p>“I highly recommend working with Kyle, he did an awesome job at executing my vision for my website! He presented a couple different options with different price ranges to ensure it fit my budget. He was quick, communicative, friendly, & helpful. ”</p>
          </blockquote>
          <figcaption class="mt-4 flex gap-x-6">
            <div>
              <div class="text-base font-semibold text-gray-900">Jaiya Elliot</div>
              <div class="text-sm/6 text-gray-600">Owner of Pepper & Pals</div>
            </div>
          </figcaption>
        </figure>
      </div>
    </div>
  </div>
</div>
<script>
  import { actions, isInputError } from 'astro:actions'
  
  const handleFormSubmit = async (event: Event) => {
    event.preventDefault()
    const button = document.getElementById('contact-button')
    const standard = document.getElementById('contact-button-standard')
    const loading = document.getElementById('contact-button-loading')
    const buttonError = document.getElementById('contact-button-error')
    const success = document.getElementById('contact-button-success')

    if (button && standard && loading) {
      (button as HTMLButtonElement).disabled = true
      standard.classList.add('hidden')
      loading.classList.remove('hidden')
    }
    const form = event.target as HTMLFormElement
    if (!form) return;
    const formData = new FormData(form)
    const formObject: { message: string; email: string; name: string } = Object.fromEntries(formData.entries()) as { message: string; email: string; name: string }
    const response = await actions.contact(formObject)
    const { error } = response
    
    if (isInputError(error)) {
      Object.entries(error.fields).forEach(([key, value]) => {
        const field = form.querySelector(`[name="${key}"]`)
        if (field) {
          field.classList.add('border-red-500', 'outline-red-500', 'focus:outline-red-700', 'autofocus')
        }
        const errorElement = document.getElementById(`${key}-error`)
        if (errorElement) {
          errorElement.textContent = value.join(', ')

          errorElement.classList.remove('hidden')
        }
      })
    }

    
    if (!response.error && !isInputError(error)) {
      if (button && loading && standard && success) {
        (button as HTMLButtonElement).disabled = false
        loading.classList.add('hidden')
        success.classList.remove('hidden')
        button.classList.add('bg-green-500', 'hover:bg-green-600')

        setTimeout(() => {
          success.classList.add('hidden')
          standard.classList.remove('hidden')
          button.classList.remove('bg-green-500', 'hover:bg-green-600')
        }, 3000)
      }
      form.reset()
    } else {
      if (button && loading && standard && buttonError) {
        loading.classList.add('hidden')
        buttonError.classList.remove('hidden')
        button.classList.add('bg-red-500', 'hover:bg-red-600')

        setTimeout(() => {
          buttonError.classList.add('hidden')
          standard.classList.remove('hidden')
          button.classList.remove('bg-red-500', 'hover:bg-red-600')
        }, 3000)
      }
    }
  }
  const form = document.getElementById('contact-form')
  if (form) {
    form.addEventListener('submit', handleFormSubmit)
  }

</script>